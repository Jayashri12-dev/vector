import tensorflow as tf
import pandas as pd
from tensorflow import keras
from tensorflow.keras import layers 
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing import sequence 

df= pd.read_csv("IMDB.csv")

max_features =10000
maxlen =500

(X_train, Y_train) , (X_test , Y_test)= imdb.load_data(num_words= max_features)

X_train=sequence.pad_sequences(X_train , maxlen=maxlen)
X_test =sequence.pad_sequences(X_train , maxlen=maxlen)

model= keras.Sequential([
    layers.Embedding(max_features , 128),
    layers.LSTM(64 , return_sequences = True),
    layers.LSTM(64),
    layers.Dense(1, activation ='sigmoid') 
])

model.compile(optimizer = 'adam', loss='binary_crossentropy', metrics = ['accuracy'])


history=model.fit(X_train , Y_train , epochs = 10 , validation_split= 0.2 , batch_size=32 , verbose=1 )


loss , accuracy = model.evaluate (X_test , Y_test )
print(f"test asccuracy :{accuracy}" )

plt.plot(history.history['accuracy'], label='Train accuracy')
plt.plot(history.history['val_accuracy'], label='validation accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.show()
